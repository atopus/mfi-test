version: "2.1"

services:

  db:
    image: postgres
    container_name: mfi-postgres
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 1m30s
      retries: 10
    restart: on-failure

  backend:
    build: ./backend
    container_name: mfi-backend
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - ALLOWED_HOST=localhost
      - STATIC_ROOT=/code/static
      - STATIC_URL=api/static/
      - ENV=prod
    ports:
      - "8000:8000"
    command: bash -c '/code/deploy/run.sh'
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - deploy:/code/deploy
      - api-statics:/code/static
  
  frontend:
    build: ./front
    container_name: mfi-frontend
    command: serve -s /app/build
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -v --silent http://localhost:3000 2>&1 | grep 200"]
      interval: 20s
      timeout: 1m
      retries: 5
 
  nginx:
    build: ./nginx
    container_name: mfi-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - deploy:/code/deploy
      - api-statics:/code/static
    environment:
      - NGINX_HOST=mfi.fr
      - NGINX_PORT=8080
    depends_on:
      frontend:
        condition: service_healthy
    restart: on-failure
    ports:
      - "8080:8080"

volumes:
  deploy:
  api-statics: